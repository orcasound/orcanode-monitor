@page
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="text-center">
    <h1 class="display-4">Current State</h1>
    <p>
        Status as of: @Model.LastChecked
    </p>
    <table>
        <tr>
            <th>Location</th>
            <!--
            <th>Latest recorded</th>
            <th>Latest uploaded</th>
            <th>Manifest updated</th>
            <th>Last checked</th>
            -->
            <th>Dataplicity Status</th>
            <th>Agent Version</th>
            <th>SD Card Util.</th>
            <th>Stream Status</th>
            <th></th>
            <th>Last OrcaHello Detection</th>
            <th>Confidence</th>
        </tr>
    @foreach (Models.Orcanode item in Model.Nodes)
    {
        <tr>
            <td title="@Html.DisplayFor(modelItem => item.DataplicityDescription)">
                @Html.DisplayFor(modelItem => item.DisplayName)
            </td>
            <!--
            <td>
                @Html.DisplayFor(modelItem => item.LatestRecordedLocal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LatestUploadedLocal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManifestUpdatedLocal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastCheckedLocal)
            </td>
            -->
            <td style="background-color: @Model.NodeDataplicityColor(item)">
                <a href="https://www.dataplicity.com/app/">
                    @Html.DisplayFor(modelItem => item.DataplicityStatus)
                </a>
            </td>
            <td style="background-color: @Model.NodeDataplicityUpgradeColor(item)">
                <a href="https://www.dataplicity.com/app/">
                    @Html.DisplayFor(modelItem => item.AgentVersion)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiskUsedInGigs)/@Html.DisplayFor(modelItem => item.DiskCapacityInGigs)G
                (@Html.DisplayFor(modelItem => item.DiskUsagePercentage)%)
            </td>
            @if (item.OrcasoundOnlineStatus == Models.OrcanodeOnlineStatus.Absent)
            {
                <td style="background-color: @Model.NodeOrcasoundColor(item)">
                    @Html.DisplayFor(modelItem => item.OrcasoundOnlineStatus)
                </td>
                <td>
                </td>
            }
            else
            {
                <td style="background-color: @Model.NodeOrcasoundColor(item)">
                    <a href="https://open.quiltdata.com/b/streaming-orcasound-net/tree/@item.S3NodeName/">
                        @Html.DisplayFor(modelItem => item.OrcasoundOnlineStatus)
                    </a>
                </td>
                <td>
                    <a href="https://live.orcasound.net/listen/@Html.DisplayFor(modelItem => item.OrcasoundSlug)" target="_blank">
                        <button>Listen</button>
                    </a>
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.LastOrcaHelloDetectionTimestamp)
            </td>
            <td style="background-color: @Model.NodeOrcaHelloDetectionColor(item)" title="@Html.DisplayFor(modelItem => item.LastOrcaHelloDetectionComments)">
                @Html.DisplayFor(modelItem => item.LastOrcaHelloDetectionConfidence)%
            </td>
        </tr>
    }
    </table>
    <p/>
    <h1 class="display-4"><a href="/api/ifttt/v1/triggers/nodestateevents">Recent State Events</a></h1>
    <table>
        <tr>
            <th>Timestamp</th>
            <th>Event</th>
        </tr>
        @foreach (Models.OrcanodeEvent item in Model.RecentEvents)
        {
            <tr>
                <td>
                    @item.DateTimeLocal
                </td>
                <td>
                    @item.Description
                </td>
            </tr>
        }
    </table>
 </div>
