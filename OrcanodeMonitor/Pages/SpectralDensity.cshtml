@page "{id}"
@model OrcanodeMonitor.Pages.SpectralDensityModel
@{
    ViewData["Title"] = "Spectral Density";
}

<div class="text-center">
    <h1 class="display-4">Spectral Density of Audio From @Model.NodeName</h1>

    <!-- Include Chart.js from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1"></script>

    <!-- Canvas for Chart.js -->
    <canvas id="frequencyChart" width="400" height="200"></canvas>
    <script>
        var ctx = document.getElementById('frequencyChart').getContext('2d');
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Labels)),
                datasets: [
                    {
                        label: 'Last Sample',
                        data: @Html.Raw(Json.Serialize(Model.MaxBucketMagnitude)),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Max Noise Magnitude',
                        data: [
                            { x: @Html.Raw(Json.Serialize(Model.Labels[0])), y: @Html.Raw(Model.MaxSilenceMagnitude) },
                            { x: @Html.Raw(Json.Serialize(Model.Labels[Model.Labels.Count - 1])), y: @Html.Raw(Model.MaxSilenceMagnitude) }
                        ],
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        fill: false,
                        pointRadius: 0 // Hide points on this line
                    },
                    {
                        label: 'Min Signal Magnitude',
                        data: [
                            { x: @Html.Raw(Json.Serialize(Model.Labels[0])), y: @Html.Raw(Model.MinNoiseMagnitude) },
                            { x: @Html.Raw(Json.Serialize(Model.Labels[Model.Labels.Count - 1])), y: @Html.Raw(Model.MinNoiseMagnitude) }
                        ],
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 2,
                        fill: false,
                        pointRadius: 0 // Hide points on this line
                    }
                ]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Frequency'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Magnitude'
                        }
                    }
                }
            }
        });
    </script>

    <div>
        <h2>Statistics</h2>
        Max magnitude: @Model.MaxMagnitude<br />
        Max magnitude outside hum range (50-60Hz): @Model.MaxNonHumMagnitude<br />
        Signal ratio: @Model.SignalRatio%<br />
        Status: @Model.Status<br />
        <p></p>
    </div>
</div>
